name: Build, Scan, and Push Docker Images

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_PREFIX: lsflk/silver

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      smtp: ${{ steps.changes.outputs.smtp }}
      imap: ${{ steps.changes.outputs.imap }}
      dkim: ${{ steps.changes.outputs.dkim }}
      certbot: ${{ steps.changes.outputs.certbot }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect changed files
        uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            smtp:
              - 'services/smtp/**'
            imap:
              - 'services/imap/**'
            dkim:
              - 'services/dkim/**'
            certbot:
              - 'services/certbot/**'

  build-smtp:
    needs: detect-changes
    if: needs.detect-changes.outputs.smtp == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      security-events: write # Required for SARIF upload

    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}-smtp
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build Docker image (no push yet)
        uses: docker/build-push-action@v5
        with:
          context: services
          file: services/smtp/Dockerfile
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Scan image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}-smtp:latest
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'HIGH,CRITICAL'
          ignore-unfixed: true
          exit-code: '1'

      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Push image (only if scan passes)
        if: success()
        uses: docker/build-push-action@v5
        with:
          context: services
          file: services/smtp/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-dkim:
    needs: detect-changes
    if: needs.detect-changes.outputs.dkim == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      security-events:
